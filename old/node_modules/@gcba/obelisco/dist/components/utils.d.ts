export declare type Type = 'primary' | 'success' | 'danger';
export declare const types: Type[];
export declare type ButtonType = Type | 'secondary' | 'link';
export declare type ButtonTypeWithName = {
    type: Type | 'secondary' | 'link';
    name: string;
};
export declare const buttonTypes: Array<ButtonTypeWithName>;
export declare type AlertType = {
    type: Type | 'info';
    text: string;
};
export declare type Size = 'default' | 'small' | 'large';
export declare const sizes: Size[];
export interface SizesTypes {
    size: Size;
    name: string;
}
export declare const sizesButton: SizesTypes[];
export declare const sizeToClass: (size: Size | 'default') => string;
export declare type DataDirection = 'top-right' | 'top' | 'top-left' | 'right-bottom' | 'right' | 'right-top' | 'left-bottom' | 'left' | 'left-top' | 'bottom-right' | 'bottom' | 'bottom-left';
export interface Direction {
    direction: DataDirection;
    icon: string;
    position: string;
}
export declare const directionTop: Direction[];
export declare const directionLeft: Direction[];
export declare const directionRight: Direction[];
export declare const directionBottom: Direction[];
export declare type SpinnerType = Type | 'secondary' | 'info' | 'light' | 'dark';
export declare const spinnerTypes: SpinnerType[];
export interface ButtonTypeWithSpinner {
    type: Type | 'secondary' | 'link';
    spinner: SpinnerType;
}
export declare const buttonSpinnerTypes: Array<ButtonTypeWithSpinner>;
export declare const buttonOutlineSpinnerTypes: Array<ButtonTypeWithSpinner>;
export declare type panelBgColor = 'light' | 'white';
