"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListLinks = exports.Alert = exports.alertLink = exports.alertHighlight = exports.alertTypes = void 0;
var react_1 = __importDefault(require("react"));
var classnames_1 = __importDefault(require("classnames"));
exports.alertTypes = [
    { type: 'info', text: 'Esta es la descripción de una alerta de información.' },
    { type: 'primary', text: 'Esta es la descripción de una alerta de advertencia.' },
    { type: 'success', text: 'Esta es la descripción de una alerta de éxito.' },
    { type: 'danger', text: 'Esta es la descripción de una alerta de error.' }
];
exports.alertHighlight = [
    {
        type: 'info',
        text: '<strong>Este es un destacado de una alerta de información.</strong> Esta es la descripción de una alerta de información que continua al texto destacado.'
    },
    {
        type: 'primary',
        text: '<strong>Este es un destacado de una alerta de advertencia.</strong> Esta es la descripción de una alerta de advertencia que continua al texto destacado.'
    },
    {
        type: 'success',
        text: '<strong>Este es un destacado de una alerta de éxito.</strong> Esta es la descripción de una alerta de éxito que continua al texto destacado.'
    },
    {
        type: 'danger',
        text: '<strong>Este es un destacado de una alerta de error.</strong> Esta es la descripción de una alerta de error que continua al texto destacado.'
    }
];
exports.alertLink = [
    {
        type: 'info',
        text: '<strong>Este es un destacado de una alerta de información.</strong> Esta es la descripción de una alerta de información que continua al texto destacado, incluso con <a href="#">enlace</a>.'
    },
    {
        type: 'primary',
        text: '<strong>Este es un destacado de una alerta de advertencia.</strong> Esta es la descripción de una alerta de advertencia que continua al texto destacado, incluso con <a href="#">enlace</a>.'
    },
    {
        type: 'success',
        text: '<strong>Este es un destacado de una alerta de éxito.</strong> Esta es la descripción de una alerta de éxito que continua al texto destacado, incluso con <a href="#">enlace</a>.'
    },
    {
        type: 'danger',
        text: '<strong>Este es un destacado de una alerta de error.</strong> Esta es la descripción de una alerta de error que continua al texto destacado, incluso con <a href="#">enlace</a>.'
    }
];
exports.Alert = function (_a) {
    var arrayAlerts = _a.arrayAlerts, isDismissible = _a.isDismissible;
    var alertClass = classnames_1.default({
        'alert-dismissible': isDismissible,
        show: isDismissible,
        fade: isDismissible
    });
    return (react_1.default.createElement(react_1.default.Fragment, null, arrayAlerts.map(function (_a) {
        var type = _a.type, text = _a.text;
        return (react_1.default.createElement("div", { key: type, className: "alert alert-" + type + " " + alertClass, role: "alert" },
            react_1.default.createElement("p", { dangerouslySetInnerHTML: { __html: text } }),
            isDismissible && (react_1.default.createElement("button", { type: "button", className: "close", "data-dismiss": "alert", "aria-label": "Close" },
                react_1.default.createElement("span", { className: "material-icons-round" }, "close")))));
    })));
};
var Link = function (_a) {
    var text = _a.text, index = _a.index, isLink = _a.isLink;
    return (react_1.default.createElement("li", null, isLink ? (react_1.default.createElement("a", { href: "#" },
        text,
        " ",
        index)) : (react_1.default.createElement("span", null,
        text,
        " ",
        index))));
};
exports.ListLinks = function (_a) {
    var type = _a.type, text = _a.text, textLink = _a.textLink, isListLinks = _a.isListLinks;
    var linkClass = classnames_1.default({
        'list-links': isListLinks
    });
    var links = [1, 2, 3, 4, 5].map(function (_, i) { return react_1.default.createElement(Link, { key: i, text: textLink, index: i + 1, isLink: isListLinks }); });
    return (react_1.default.createElement("div", { className: "alert alert-" + type, role: "alert" },
        react_1.default.createElement("p", { dangerouslySetInnerHTML: { __html: text } }),
        react_1.default.createElement("ol", { className: linkClass }, links)));
};
//# sourceMappingURL=index.js.map