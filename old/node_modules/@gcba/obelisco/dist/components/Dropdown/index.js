"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DropdownOption = exports.Dropdown = exports.DropdownItem = exports.DropdownIcon = void 0;
var react_1 = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var utils_1 = require("../utils");
exports.DropdownIcon = function (_a) {
    var itemIcon = _a.itemIcon, itemIconClass = _a.itemIconClass;
    return (react_1.default.createElement(react_1.default.Fragment, null,
        itemIcon && !(itemIcon === null || itemIcon === void 0 ? void 0 : itemIcon.includes('bx')) && (react_1.default.createElement("span", { className: ("material-icons-round " + (itemIconClass ? itemIconClass : '')).trim() }, itemIcon)),
        itemIcon && (itemIcon === null || itemIcon === void 0 ? void 0 : itemIcon.includes('bx')) && (react_1.default.createElement("i", { className: (itemIcon + " " + (itemIconClass ? itemIconClass : '')).trim() }))));
};
exports.DropdownItem = function (props) {
    var _a = props.title, title = _a === void 0 ? 'Opción de navegación' : _a, isDanger = props.isDanger, itemIconRight = props.itemIconRight, itemIconLeft = props.itemIconLeft, isAlignRight = props.isAlignRight, isSubItem = props.isSubItem, isDisabled = props.isDisabled;
    var itemClass = classnames_1.default('dropdown-item', {
        'item-danger': isDanger,
        'sub-item': isSubItem
    });
    return (react_1.default.createElement("a", __assign({ className: itemClass, href: "#" }, (isDisabled ? { disabled: true } : {})),
        itemIconLeft && react_1.default.createElement(exports.DropdownIcon, { itemIcon: itemIconLeft }),
        react_1.default.createElement("span", { className: ("item-text " + (isAlignRight ? 'text-right' : '')).trim() }, isDanger ? 'Cerrar sesión' : title),
        itemIconRight && react_1.default.createElement(exports.DropdownIcon, { itemIcon: itemIconRight })));
};
exports.Dropdown = function (props) {
    var _a = props.title, title = _a === void 0 ? 'Desplegable' : _a, isBordered = props.isBordered, children = props.children, onlyIcon = props.onlyIcon, btnIconRight = props.btnIconRight, btnIconLeft = props.btnIconLeft, btnIconRightClass = props.btnIconRightClass, btnIconLeftClass = props.btnIconLeftClass, isMenuRight = props.isMenuRight, isNested = props.isNested, _b = props.idDropdown, idDropdown = _b === void 0 ? 'dropdownContent' : _b, isSubDropdown = props.isSubDropdown;
    var dropdownClass = classnames_1.default('dropdown', { 'sub-dropdown': isSubDropdown });
    var buttonDropdownClass = classnames_1.default('btn', 'btn-dropdown', 'btn-dropdown-lg', {
        'btn-dropdown-border': isBordered,
        'dropdown-toggle': !isNested || isNested == undefined,
        'sub-btn-dropdown': isSubDropdown
    });
    var dropdownMenuClass = classnames_1.default('dropdown-menu', {
        'dropdown-menu-right': isMenuRight,
        'collapse ': isNested,
        'sub-dropdown-menu': isSubDropdown
    });
    return (react_1.default.createElement("div", { className: dropdownClass },
        react_1.default.createElement("button", __assign({ type: "button", className: buttonDropdownClass }, (isNested
            ? {
                'data-toggle': 'collapse',
                'data-target': "#" + idDropdown,
                'aria-controls': "" + idDropdown,
                'aria-expanded': 'false',
                'aria-label': 'Toggle'
            }
            : {
                'data-toggle': 'dropdown',
                'aria-haspopup': 'true',
                'aria-expanded': 'false'
            })),
            btnIconLeft && react_1.default.createElement(exports.DropdownIcon, { itemIcon: btnIconLeft, itemIconClass: btnIconLeftClass }),
            (!onlyIcon || onlyIcon == undefined) && (react_1.default.createElement("span", { className: isSubDropdown ? 'item-text' : 'btn-dropdown-text' }, title)),
            btnIconRight && react_1.default.createElement(exports.DropdownIcon, { itemIcon: btnIconRight, itemIconClass: btnIconRightClass })),
        react_1.default.createElement("div", __assign({ className: dropdownMenuClass }, (isNested ? { id: idDropdown } : {})), children)));
};
exports.DropdownOption = function (_a) {
    var options = _a.options, _b = _a.isRadio, isRadio = _b === void 0 ? false : _b, children = _a.children, icon = _a.icon, iconType = _a.iconType, size = _a.size, idDropdown = _a.idDropdown, _c = _a.isDisabled, isDisabled = _c === void 0 ? false : _c;
    var _d = react_1.useState({}), checkboxStates = _d[0], setCheckboxStates = _d[1];
    var _e = react_1.useState(null), selectedOption = _e[0], setSelectedOption = _e[1];
    var handleCheckboxChange = function (checkboxName) {
        setCheckboxStates(function (prevState) {
            var _a;
            return (__assign(__assign({}, prevState), (_a = {}, _a[checkboxName] = !prevState[checkboxName], _a)));
        });
    };
    var handleRadioChange = function (radioName) {
        var selectedOption = options.find(function (option) { return option.value === radioName; });
        if (selectedOption && selectedOption.isDisabled) {
            return;
        }
        setSelectedOption((selectedOption === null || selectedOption === void 0 ? void 0 : selectedOption.label) || null);
        var updatedCheckboxStates = {};
        options.forEach(function (option) {
            updatedCheckboxStates[option.value] = option.value === radioName;
        });
        setCheckboxStates(updatedCheckboxStates);
    };
    var selectedCheckboxCount = Object.values(checkboxStates).filter(function (checked) { return checked; }).length;
    var dropdownTitle = selectedCheckboxCount > 0 ? "Desplegable (" + selectedCheckboxCount + ")" : 'Desplegable';
    var displayTitle = selectedOption ? selectedOption : dropdownTitle;
    var generateUniqueID = function (value, isRadio) {
        var prefix = isRadio ? 'radio' : 'checkbox';
        return prefix + "-" + value + "-" + Math.random().toString(36).substr(2, 9);
    };
    return (react_1.default.createElement(react_1.default.Fragment, null,
        react_1.default.createElement("div", { className: "dropdown dropdown-form" },
            react_1.default.createElement("button", { type: "button", className: ("btn btn-dropdown btn-dropdown-border " + (size !== undefined && utils_1.sizeToClass(size) ? "btn-dropdown-" + utils_1.sizeToClass(size) + " " : '')).trim(), "data-toggle": "collapse", "data-target": "#" + idDropdown, "aria-controls": idDropdown, "aria-expanded": "false", "aria-label": "Toggle" },
                icon && iconType === 'material' ? icon : icon && react_1.default.createElement("i", { className: "bx " + icon }),
                react_1.default.createElement("span", { className: "btn-dropdown-text" }, displayTitle),
                react_1.default.createElement("span", { className: "material-icons-round btn-dropdown-icon" }, "expand_more")),
            react_1.default.createElement("div", { className: "dropdown-menu dropdown-body collapse", id: idDropdown }, options.map(function (option) { return (react_1.default.createElement("div", { className: "custom-control " + (isRadio ? 'custom-radio' : 'custom-checkbox'), key: option.value }, isRadio ? (react_1.default.createElement("label", { className: "btn btn-chip " + (checkboxStates[option.value] ? 'active' : '') + " " + (option.isDisabled ? 'disabled' : '') },
                react_1.default.createElement("input", { className: "btn-check", type: "radio", id: generateUniqueID(option.value, isRadio), name: "profession", value: option.value, checked: checkboxStates[option.value], onChange: function () { return handleRadioChange(option.value); } }),
                react_1.default.createElement("span", { className: "btn-chip-text" }, option.label),
                children)) : (react_1.default.createElement(react_1.default.Fragment, null,
                react_1.default.createElement("input", { className: "custom-control-input", type: "checkbox", id: "skills-" + option.value + "-input", name: "skills", value: option.value, checked: checkboxStates[option.value], onChange: function () { return handleCheckboxChange(option.value); }, disabled: isDisabled || option.isDisabled }),
                react_1.default.createElement("label", { className: "custom-control-label", htmlFor: "skills-" + option.value + "-input" }, option.label))))); })))));
};
//# sourceMappingURL=index.js.map