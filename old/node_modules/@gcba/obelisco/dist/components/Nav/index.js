"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.checkActiveChild = exports.NavItemComponent = exports.NavHorizontal = exports.Nav = void 0;
var react_1 = __importDefault(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var listClasses = 'nav flex-column nav-pills';
exports.Nav = function (props) {
    var items = props.items, selected = props.selected, navSize = props.navSize, onClick = props.onClick, hasIcon = props.hasIcon;
    var mainListClasses = classnames_1.default(listClasses, {
        'nav-lg': navSize === 'large'
    });
    return (react_1.default.createElement("nav", null,
        react_1.default.createElement("ul", { className: mainListClasses }, items.map(function (item) { return (react_1.default.createElement(exports.NavItemComponent, __assign({}, item, { key: item.id, level: 0, onClick: onClick, selected: selected, hasIcon: hasIcon }))); }))));
};
var listClassesHorizontal = 'nav flex-row nav-pills';
exports.NavHorizontal = function (props) {
    var items = props.items, selected = props.selected, navSize = props.navSize, onClick = props.onClick, hasIcon = props.hasIcon, hasReverse = props.hasReverse;
    var mainListClasses = classnames_1.default(listClassesHorizontal, {
        'nav-lg': navSize === 'large'
    });
    return (react_1.default.createElement("nav", null,
        react_1.default.createElement("ul", { className: mainListClasses }, items.map(function (item) { return (react_1.default.createElement(NavItemComponentHorizontal, __assign({}, item, { key: item.id, level: 0, onClick: onClick, selected: selected, hasIcon: hasIcon, hasReverse: hasReverse, type: item.type }))); }))));
};
exports.NavItemComponent = function (props) {
    var name = props.name, id = props.id, href = props.href, children = props.children, level = props.level, disabled = props.disabled, selected = props.selected, hasIcon = props.hasIcon;
    var isActive = selected && id === selected;
    var hasActiveChild = exports.checkActiveChild(children, selected);
    var linkClassName = classnames_1.default('nav-link', {
        'active-child': !disabled && hasActiveChild,
        active: !disabled && isActive,
        disabled: disabled
    });
    var handleClick = function (event) {
        if (!href) {
            event.preventDefault();
            !disabled && props.onClick && props.onClick(id);
        }
    };
    return (react_1.default.createElement("li", { className: "nav-item" },
        react_1.default.createElement("a", { className: linkClassName, href: href || '#', onClick: handleClick, "aria-disabled": disabled, tabIndex: disabled ? -1 : undefined }, hasIcon ? (react_1.default.createElement("div", { className: "nav-icon" },
            react_1.default.createElement("i", { className: "bx bxs-user-circle" }),
            react_1.default.createElement("span", null, name))) : (react_1.default.createElement("span", null, name))),
        !disabled && (isActive || hasActiveChild) && children && (react_1.default.createElement("ul", { className: listClasses }, children.map(function (item) { return (react_1.default.createElement(exports.NavItemComponent, __assign({}, item, { key: item.id, level: level + 1, onClick: props.onClick, selected: selected }))); })))));
};
var NavItemComponentHorizontal = function (props) {
    var name = props.name, id = props.id, href = props.href, children = props.children, level = props.level, disabled = props.disabled, selected = props.selected, hasBordered = props.hasBordered, type = props.type, hasIcon = props.hasIcon, hasReverse = props.hasReverse;
    var isActive = selected && id === selected;
    var hasActiveChild = exports.checkActiveChild(children, selected);
    var linkClassName = classnames_1.default('nav-link', {
        'nav-link-sm': type === 'small',
        'nav-link-lg': type === 'large',
        'border-link': hasBordered,
        'active-child': !disabled && hasActiveChild,
        active: !disabled && isActive,
        disabled: disabled
    });
    var handleClick = function (event) {
        if (!href) {
            event.preventDefault();
            !disabled && props.onClick && props.onClick(id);
        }
    };
    return (react_1.default.createElement("li", { className: "nav-item" },
        react_1.default.createElement("a", { className: linkClassName, href: href || '#', onClick: handleClick, "aria-disabled": disabled, tabIndex: disabled ? -1 : undefined }, hasReverse ? (react_1.default.createElement("div", { className: "nav-icon" },
            react_1.default.createElement("span", null, name),
            react_1.default.createElement("i", { className: "bx bxs-user-circle" }))) : hasIcon ? (react_1.default.createElement("div", { className: "nav-icon" },
            react_1.default.createElement("i", { className: "bx bxs-user-circle" }),
            react_1.default.createElement("span", null, name))) : (react_1.default.createElement("span", null, name))),
        !disabled && (isActive || hasActiveChild) && children && (react_1.default.createElement("ul", { className: listClasses }, children.map(function (item) { return (react_1.default.createElement(exports.NavItemComponent, __assign({}, item, { key: item.id, level: level + 1, onClick: props.onClick, selected: selected, hasIcon: hasIcon }))); })))));
};
exports.checkActiveChild = function (children, selected) {
    return !!(children === null || children === void 0 ? void 0 : children.some(function (child) {
        return child.id === selected || (child.children && exports.checkActiveChild(child.children, selected));
    }));
};
//# sourceMappingURL=index.js.map