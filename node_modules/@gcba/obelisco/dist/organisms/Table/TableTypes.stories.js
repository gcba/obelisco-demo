"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextAndButtonIcon = exports.TextAndButton = exports.TextAndTag = exports.TextAndLink = exports.TextAndNumber = exports.OnlyText = void 0;
// Base
var react_1 = __importDefault(require("react"));
// Addons
var addon_a11y_1 = require("@storybook/addon-a11y");
// Components
var _1 = require(".");
// Configuración general del componente
exports.default = {
    title: 'Organismos|Tablas/Tipo de celda',
    component: _1.Table,
    decorators: [addon_a11y_1.withA11y]
};
exports.OnlyText = function () {
    return (react_1.default.createElement("div", { className: "storybook__container-table-responsive" },
        react_1.default.createElement("div", { className: "responsive-scroll", tabIndex: 0 },
            react_1.default.createElement("table", { className: "table" },
                react_1.default.createElement("thead", null,
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"))),
                react_1.default.createElement("tbody", null,
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado")),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado")),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado")),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado")))))));
};
exports.OnlyText.story = {
    name: 'De Texto'
};
exports.TextAndNumber = function () {
    return (react_1.default.createElement("div", { className: "storybook__container-table-responsive" },
        react_1.default.createElement("div", { className: "responsive-scroll", tabIndex: 0 },
            react_1.default.createElement("table", { className: "table" },
                react_1.default.createElement("thead", null,
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-number" }, "N\u00FAmero"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"))),
                react_1.default.createElement("tbody", null,
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Este un texto de prueba para registrar el alto m\u00E1ximo de la celda y la cantidad de caracteres permitidos."),
                        react_1.default.createElement("td", { className: "text-right" }, "$100,00"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado")),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", { className: "text-right" }, "$100,00"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado")),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", { className: "text-right" }, "$100,00"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado")),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", { className: "text-right" }, "$100,00"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado")))))));
};
exports.TextAndNumber.story = {
    name: 'De número'
};
exports.TextAndLink = function () {
    return (react_1.default.createElement("div", { className: "storybook__container-table-responsive" },
        react_1.default.createElement("div", { className: "responsive-scroll", tabIndex: 0 },
            react_1.default.createElement("table", { className: "table" },
                react_1.default.createElement("thead", null,
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-link" }, "Enlace"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"))),
                react_1.default.createElement("tbody", null,
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Este un texto de prueba para registrar el alto m\u00E1ximo de la celda y la cantidad de caracteres permitidos."),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null,
                            react_1.default.createElement("a", { href: "#", target: "_blank", rel: "noreferrer" }, "Enlace predeterminado")),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado")),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null,
                            react_1.default.createElement("a", { href: "#", target: "_blank", rel: "noreferrer" }, "Enlace predeterminado")),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado")),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null,
                            react_1.default.createElement("a", { href: "#", target: "_blank", rel: "noreferrer" }, "Enlace predeterminado")),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado")),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null,
                            react_1.default.createElement("a", { href: "#", target: "_blank", rel: "noreferrer" }, "Enlace predeterminado")),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado")))))));
};
exports.TextAndLink.story = {
    name: 'De enlace'
};
exports.TextAndTag = function () {
    return (react_1.default.createElement("div", { className: "storybook__container-table-responsive" },
        react_1.default.createElement("div", { className: "responsive-scroll", tabIndex: 0 },
            react_1.default.createElement("table", { className: "table" },
                react_1.default.createElement("thead", null,
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-tag" }, "Etiqueta"))),
                react_1.default.createElement("tbody", null,
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Este un texto de prueba para registrar el alto m\u00E1ximo de la celda y la cantidad de caracteres permitidos."),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null,
                            react_1.default.createElement("span", { className: "badge badge-secondary" }, "Etiqueta 1"))),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null,
                            react_1.default.createElement("span", { className: "badge badge-secondary" }, "Etiqueta 1"))),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null,
                            react_1.default.createElement("span", { className: "badge badge-secondary" }, "Etiqueta 1"))),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null,
                            react_1.default.createElement("span", { className: "badge badge-secondary" }, "Etiqueta 1"))))))));
};
exports.TextAndTag.story = {
    name: 'De etiqueta'
};
exports.TextAndButton = function () {
    return (react_1.default.createElement("div", { className: "storybook__container-table-responsive" },
        react_1.default.createElement("div", { className: "responsive-scroll", tabIndex: 0 },
            react_1.default.createElement("table", { className: "table" },
                react_1.default.createElement("thead", null,
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-button" }, "Bot\u00F3n"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"))),
                react_1.default.createElement("tbody", null,
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Este un texto de prueba para registrar el alto m\u00E1ximo de la celda y la cantidad de caracteres permitidos."),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null,
                            react_1.default.createElement("button", { type: "button", className: "btn btn-primary btn-icon" },
                                react_1.default.createElement("i", { className: "bx bxs-info-circle" }),
                                "bot\u00F3n")),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado")),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null,
                            react_1.default.createElement("button", { type: "button", className: "btn btn-primary btn-icon" },
                                react_1.default.createElement("i", { className: "bx bxs-info-circle" }),
                                "bot\u00F3n")),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado")),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null,
                            react_1.default.createElement("button", { type: "button", className: "btn btn-primary btn-icon" },
                                react_1.default.createElement("i", { className: "bx bxs-info-circle" }),
                                "bot\u00F3n")),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado")),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null,
                            react_1.default.createElement("button", { type: "button", className: "btn btn-primary btn-icon" },
                                react_1.default.createElement("i", { className: "bx bxs-info-circle" }),
                                "bot\u00F3n")),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado")))))));
};
exports.TextAndButton.story = {
    name: 'De botón'
};
exports.TextAndButtonIcon = function () {
    return (react_1.default.createElement("div", { className: "storybook__container-table-responsive" },
        react_1.default.createElement("div", { className: "responsive-scroll", tabIndex: 0 },
            react_1.default.createElement("table", { className: "table" },
                react_1.default.createElement("thead", null,
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-text" }, "Texto"),
                        react_1.default.createElement("th", { scope: "col", className: "tb-button" }, "Bot\u00F3n de \u00EDcono"))),
                react_1.default.createElement("tbody", null,
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Este un texto de prueba para registrar el alto m\u00E1ximo de la celda y la cantidad de caracteres permitidos."),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null,
                            react_1.default.createElement("div", { className: "actions-table" },
                                react_1.default.createElement("button", { className: "btn button-actions-table" },
                                    react_1.default.createElement("span", { className: "material-icons-round" }, "edit")),
                                react_1.default.createElement("button", { className: "btn button-actions-table" },
                                    react_1.default.createElement("span", { className: "material-icons-round" }, "visibility")),
                                react_1.default.createElement("button", { className: "btn button-actions-table" },
                                    react_1.default.createElement("span", { className: "material-icons-round" }, "file_download")),
                                react_1.default.createElement("button", { className: "btn button-actions-table" },
                                    react_1.default.createElement("span", { className: "material-icons-round" }, "delete"))))),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null,
                            react_1.default.createElement("div", { className: "actions-table" },
                                react_1.default.createElement("button", { className: "btn button-actions-table" },
                                    react_1.default.createElement("span", { className: "material-icons-round" }, "edit")),
                                react_1.default.createElement("button", { className: "btn button-actions-table" },
                                    react_1.default.createElement("span", { className: "material-icons-round" }, "visibility")),
                                react_1.default.createElement("button", { className: "btn button-actions-table" },
                                    react_1.default.createElement("span", { className: "material-icons-round" }, "file_download")),
                                react_1.default.createElement("button", { className: "btn button-actions-table" },
                                    react_1.default.createElement("span", { className: "material-icons-round" }, "delete"))))),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null,
                            react_1.default.createElement("div", { className: "actions-table" },
                                react_1.default.createElement("button", { className: "btn button-actions-table" },
                                    react_1.default.createElement("span", { className: "material-icons-round" }, "edit")),
                                react_1.default.createElement("button", { className: "btn button-actions-table" },
                                    react_1.default.createElement("span", { className: "material-icons-round" }, "visibility")),
                                react_1.default.createElement("button", { className: "btn button-actions-table" },
                                    react_1.default.createElement("span", { className: "material-icons-round" }, "file_download")),
                                react_1.default.createElement("button", { className: "btn button-actions-table" },
                                    react_1.default.createElement("span", { className: "material-icons-round" }, "delete"))))),
                    react_1.default.createElement("tr", null,
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null, "Texto predeterminado"),
                        react_1.default.createElement("td", null,
                            react_1.default.createElement("div", { className: "actions-table" },
                                react_1.default.createElement("button", { className: "btn button-actions-table" },
                                    react_1.default.createElement("span", { className: "material-icons-round" }, "edit")),
                                react_1.default.createElement("button", { className: "btn button-actions-table" },
                                    react_1.default.createElement("span", { className: "material-icons-round" }, "visibility")),
                                react_1.default.createElement("button", { className: "btn button-actions-table" },
                                    react_1.default.createElement("span", { className: "material-icons-round" }, "file_download")),
                                react_1.default.createElement("button", { className: "btn button-actions-table" },
                                    react_1.default.createElement("span", { className: "material-icons-round" }, "delete"))))))))));
};
exports.TextAndButtonIcon.story = {
    name: 'De botón de ícono'
};
//# sourceMappingURL=TableTypes.stories.js.map